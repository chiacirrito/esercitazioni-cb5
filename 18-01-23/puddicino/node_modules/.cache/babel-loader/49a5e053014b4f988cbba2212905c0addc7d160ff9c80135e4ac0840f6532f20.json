{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Simona\\\\OneDrive\\\\Desktop\\\\esercitazioni-cb5\\\\puddicino\\\\src\\\\components\\\\newMessage\\\\NewMessage.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { POST } from \"../../utils/http\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewMessage = () => {\n  _s();\n  const [messageText, setMessageText] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const handleSubmit = e => {\n    fetch(\"https://dummyjson.com/posts/add\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        title: title,\n        body: body,\n        userId: Math.random().toString(36).slice(2)\n      }),\n      headers: {\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(res => res.json()).then(post => {\n      setPosts(posts => [post, ...posts]);\n      setTitle(\"\");\n      setBody(\"\");\n    }).catch(err => {\n      console.log(error);\n    });\n  };\n\n  /*    {\r\n    \r\n    headers: {\r\n      },\r\n      body: '',\r\n      firstName: '',\r\n      title: '',\r\n    })\r\n  }\r\n    .then(res => res.json())\r\n  .then(console.log); */\n\n  useEffect(() => {\n    POST(`users/${data.userId}`).then(user => setUser(user));\n  }, []);\n  const onHandleInput = e => setMessageText(e.target.value);\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(messageText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"NewMessage\",\n    children: [console.log(messageText), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: messageText,\n        onChange: onHandleInput,\n        type: \"text\",\n        placeholder: \"@Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: messageText,\n        onChange: onHandleInput,\n        type: \"text\",\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: messageText,\n        onChange: onHandleInput,\n        type: \"text\",\n        placeholder: \"Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(NewMessage, \"mnIZIFhzmvFEEUdBoxVqqXY9WX0=\");\n_c = NewMessage;\nexport default NewMessage;\nvar _c;\n$RefreshReg$(_c, \"NewMessage\");","map":{"version":3,"names":["useState","POST","NewMessage","messageText","setMessageText","posts","setPosts","title","setTitle","body","setBody","handleSubmit","e","fetch","method","JSON","stringify","userId","Math","random","toString","slice","headers","then","res","json","post","catch","err","console","log","error","useEffect","data","user","setUser","onHandleInput","target","value","onSubmit","preventDefault"],"sources":["C:/Users/Simona/OneDrive/Desktop/esercitazioni-cb5/puddicino/src/components/newMessage/NewMessage.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { POST } from \"../../utils/http\";\r\nimport \"./index.css\";\r\n\r\nconst NewMessage = () => {\r\n  const [messageText, setMessageText] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    fetch(\"https://dummyjson.com/posts/add\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        title: title,\r\n        body: body,\r\n        userId: Math.random().toString(36).slice(2),\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((post) => {\r\n        setPosts((posts) => [post, ...posts]);\r\n        setTitle(\"\");\r\n        setBody(\"\");\r\n      })\r\n\r\n      .catch((err) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  /*    {\r\n    \r\n    headers: {\r\n      },\r\n      body: '',\r\n      firstName: '',\r\n      title: '',\r\n    })\r\n  }\r\n\r\n  .then(res => res.json())\r\n  .then(console.log); */\r\n\r\n  useEffect(() => {\r\n    POST(`users/${data.userId}`).then((user) => setUser(user));\r\n  }, []);\r\n\r\n  const onHandleInput = (e) => setMessageText(e.target.value);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(messageText);\r\n  };\r\n\r\n  return (\r\n    <div className=\"NewMessage\">\r\n      {console.log(messageText)}\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          value={messageText}\r\n          onChange={onHandleInput}\r\n          type=\"text\"\r\n          placeholder=\"@Username\"\r\n        />\r\n        <input\r\n          value={messageText}\r\n          onChange={onHandleInput}\r\n          type=\"text\"\r\n          placeholder=\"Title\"\r\n        />\r\n        <input\r\n          value={messageText}\r\n          onChange={onHandleInput}\r\n          type=\"text\"\r\n          placeholder=\"Text\"\r\n        />\r\n\r\n        <input type=\"submit\" value=\"Send\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewMessage;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,aAAa;AAAC;AAErB,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1BC,KAAK,CAAC,iCAAiC,EAAE;MACvCC,MAAM,EAAE,MAAM;MACdL,IAAI,EAAEM,IAAI,CAACC,SAAS,CAAC;QACnBT,KAAK,EAAEA,KAAK;QACZE,IAAI,EAAEA,IAAI;QACVQ,MAAM,EAAEC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC;MAC5C,CAAC,CAAC;MACFC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdpB,QAAQ,CAAED,KAAK,IAAK,CAACqB,IAAI,EAAE,GAAGrB,KAAK,CAAC,CAAC;MACrCG,QAAQ,CAAC,EAAE,CAAC;MACZE,OAAO,CAAC,EAAE,CAAC;IACb,CAAC,CAAC,CAEDiB,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGEC,SAAS,CAAC,MAAM;IACd/B,IAAI,CAAE,SAAQgC,IAAI,CAAChB,MAAO,EAAC,CAAC,CAACM,IAAI,CAAEW,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,aAAa,GAAIxB,CAAC,IAAKR,cAAc,CAACQ,CAAC,CAACyB,MAAM,CAACC,KAAK,CAAC;EAE3D,MAAMC,QAAQ,GAAI3B,CAAC,IAAK;IACtBA,CAAC,CAAC4B,cAAc,EAAE;IAClBX,OAAO,CAACC,GAAG,CAAC3B,WAAW,CAAC;EAC1B,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,YAAY;IAAA,WACxB0B,OAAO,CAACC,GAAG,CAAC3B,WAAW,CAAC,eACzB;MAAM,QAAQ,EAAEoC,QAAS;MAAA,wBACvB;QACE,KAAK,EAAEpC,WAAY;QACnB,QAAQ,EAAEiC,aAAc;QACxB,IAAI,EAAC,MAAM;QACX,WAAW,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QACvB,eACF;QACE,KAAK,EAAEjC,WAAY;QACnB,QAAQ,EAAEiC,aAAc;QACxB,IAAI,EAAC,MAAM;QACX,WAAW,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QACnB,eACF;QACE,KAAK,EAAEjC,WAAY;QACnB,QAAQ,EAAEiC,aAAc;QACxB,IAAI,EAAC,MAAM;QACX,WAAW,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAClB,eAEF;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/B;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GAjFIlC,UAAU;AAAA,KAAVA,UAAU;AAmFhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}